# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: karps/proto/spark.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from karps.proto import graph_pb2 as karps_dot_proto_dot_graph__pb2
from karps.proto import types_pb2 as karps_dot_proto_dot_types__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='karps/proto/spark.proto',
  package='karps.spark',
  syntax='proto3',
  serialized_pb=_b('\n\x17karps/proto/spark.proto\x12\x0bkarps.spark\x1a\x17karps/proto/graph.proto\x1a\x17karps/proto/types.proto\"\xf8\x03\n\x0bSparkAction\x12\x1e\n\x04path\x18\x01 \x01(\x0b\x32\x10.karps.core.Path\x12\x12\n\ntable_name\x18\x02 \x01(\t\x12&\n\x0c\x64\x65pendencies\x18\x03 \x03(\x0b\x32\x10.karps.core.Path\x12>\n\x0bload_inline\x18\x04 \x01(\x0b\x32\'.karps.spark.SparkAction.LoadFromInlineH\x00\x12\x37\n\x08\x65xec_sql\x18\x05 \x01(\x0b\x32#.karps.spark.SparkAction.ExecuteSQLH\x00\x12@\n\x0e\x65xtract_pandas\x18\x06 \x01(\x0b\x32&.karps.spark.SparkAction.ExtractPandasH\x00\x12<\n\x0c\x65xtract_cell\x18\x07 \x01(\x0b\x32$.karps.spark.SparkAction.ExtractCellH\x00\x1a!\n\x0eLoadFromInline\x12\x0f\n\x07parquet\x18\x01 \x01(\x0c\x1a\x1f\n\nExecuteSQL\x12\x11\n\tstatement\x18\x01 \x01(\t\x1a\x0f\n\rExtractPandas\x1a\x35\n\x0b\x45xtractCell\x12&\n\tdata_type\x18\x01 \x01(\x0b\x32\x13.karps.core.SQLTypeB\x08\n\x06\x61\x63tion\"7\n\nSparkGraph\x12)\n\x07\x61\x63tions\x18\x01 \x03(\x0b\x32\x18.karps.spark.SparkActionb\x06proto3')
  ,
  dependencies=[karps_dot_proto_dot_graph__pb2.DESCRIPTOR,karps_dot_proto_dot_types__pb2.DESCRIPTOR,])




_SPARKACTION_LOADFROMINLINE = _descriptor.Descriptor(
  name='LoadFromInline',
  full_name='karps.spark.SparkAction.LoadFromInline',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parquet', full_name='karps.spark.SparkAction.LoadFromInline.parquet', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=447,
  serialized_end=480,
)

_SPARKACTION_EXECUTESQL = _descriptor.Descriptor(
  name='ExecuteSQL',
  full_name='karps.spark.SparkAction.ExecuteSQL',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='statement', full_name='karps.spark.SparkAction.ExecuteSQL.statement', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=482,
  serialized_end=513,
)

_SPARKACTION_EXTRACTPANDAS = _descriptor.Descriptor(
  name='ExtractPandas',
  full_name='karps.spark.SparkAction.ExtractPandas',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=515,
  serialized_end=530,
)

_SPARKACTION_EXTRACTCELL = _descriptor.Descriptor(
  name='ExtractCell',
  full_name='karps.spark.SparkAction.ExtractCell',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_type', full_name='karps.spark.SparkAction.ExtractCell.data_type', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=532,
  serialized_end=585,
)

_SPARKACTION = _descriptor.Descriptor(
  name='SparkAction',
  full_name='karps.spark.SparkAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='karps.spark.SparkAction.path', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='table_name', full_name='karps.spark.SparkAction.table_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dependencies', full_name='karps.spark.SparkAction.dependencies', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='load_inline', full_name='karps.spark.SparkAction.load_inline', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exec_sql', full_name='karps.spark.SparkAction.exec_sql', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='extract_pandas', full_name='karps.spark.SparkAction.extract_pandas', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='extract_cell', full_name='karps.spark.SparkAction.extract_cell', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SPARKACTION_LOADFROMINLINE, _SPARKACTION_EXECUTESQL, _SPARKACTION_EXTRACTPANDAS, _SPARKACTION_EXTRACTCELL, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='action', full_name='karps.spark.SparkAction.action',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=91,
  serialized_end=595,
)


_SPARKGRAPH = _descriptor.Descriptor(
  name='SparkGraph',
  full_name='karps.spark.SparkGraph',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='actions', full_name='karps.spark.SparkGraph.actions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=597,
  serialized_end=652,
)

_SPARKACTION_LOADFROMINLINE.containing_type = _SPARKACTION
_SPARKACTION_EXECUTESQL.containing_type = _SPARKACTION
_SPARKACTION_EXTRACTPANDAS.containing_type = _SPARKACTION
_SPARKACTION_EXTRACTCELL.fields_by_name['data_type'].message_type = karps_dot_proto_dot_types__pb2._SQLTYPE
_SPARKACTION_EXTRACTCELL.containing_type = _SPARKACTION
_SPARKACTION.fields_by_name['path'].message_type = karps_dot_proto_dot_graph__pb2._PATH
_SPARKACTION.fields_by_name['dependencies'].message_type = karps_dot_proto_dot_graph__pb2._PATH
_SPARKACTION.fields_by_name['load_inline'].message_type = _SPARKACTION_LOADFROMINLINE
_SPARKACTION.fields_by_name['exec_sql'].message_type = _SPARKACTION_EXECUTESQL
_SPARKACTION.fields_by_name['extract_pandas'].message_type = _SPARKACTION_EXTRACTPANDAS
_SPARKACTION.fields_by_name['extract_cell'].message_type = _SPARKACTION_EXTRACTCELL
_SPARKACTION.oneofs_by_name['action'].fields.append(
  _SPARKACTION.fields_by_name['load_inline'])
_SPARKACTION.fields_by_name['load_inline'].containing_oneof = _SPARKACTION.oneofs_by_name['action']
_SPARKACTION.oneofs_by_name['action'].fields.append(
  _SPARKACTION.fields_by_name['exec_sql'])
_SPARKACTION.fields_by_name['exec_sql'].containing_oneof = _SPARKACTION.oneofs_by_name['action']
_SPARKACTION.oneofs_by_name['action'].fields.append(
  _SPARKACTION.fields_by_name['extract_pandas'])
_SPARKACTION.fields_by_name['extract_pandas'].containing_oneof = _SPARKACTION.oneofs_by_name['action']
_SPARKACTION.oneofs_by_name['action'].fields.append(
  _SPARKACTION.fields_by_name['extract_cell'])
_SPARKACTION.fields_by_name['extract_cell'].containing_oneof = _SPARKACTION.oneofs_by_name['action']
_SPARKGRAPH.fields_by_name['actions'].message_type = _SPARKACTION
DESCRIPTOR.message_types_by_name['SparkAction'] = _SPARKACTION
DESCRIPTOR.message_types_by_name['SparkGraph'] = _SPARKGRAPH
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SparkAction = _reflection.GeneratedProtocolMessageType('SparkAction', (_message.Message,), dict(

  LoadFromInline = _reflection.GeneratedProtocolMessageType('LoadFromInline', (_message.Message,), dict(
    DESCRIPTOR = _SPARKACTION_LOADFROMINLINE,
    __module__ = 'karps.proto.spark_pb2'
    # @@protoc_insertion_point(class_scope:karps.spark.SparkAction.LoadFromInline)
    ))
  ,

  ExecuteSQL = _reflection.GeneratedProtocolMessageType('ExecuteSQL', (_message.Message,), dict(
    DESCRIPTOR = _SPARKACTION_EXECUTESQL,
    __module__ = 'karps.proto.spark_pb2'
    # @@protoc_insertion_point(class_scope:karps.spark.SparkAction.ExecuteSQL)
    ))
  ,

  ExtractPandas = _reflection.GeneratedProtocolMessageType('ExtractPandas', (_message.Message,), dict(
    DESCRIPTOR = _SPARKACTION_EXTRACTPANDAS,
    __module__ = 'karps.proto.spark_pb2'
    # @@protoc_insertion_point(class_scope:karps.spark.SparkAction.ExtractPandas)
    ))
  ,

  ExtractCell = _reflection.GeneratedProtocolMessageType('ExtractCell', (_message.Message,), dict(
    DESCRIPTOR = _SPARKACTION_EXTRACTCELL,
    __module__ = 'karps.proto.spark_pb2'
    # @@protoc_insertion_point(class_scope:karps.spark.SparkAction.ExtractCell)
    ))
  ,
  DESCRIPTOR = _SPARKACTION,
  __module__ = 'karps.proto.spark_pb2'
  # @@protoc_insertion_point(class_scope:karps.spark.SparkAction)
  ))
_sym_db.RegisterMessage(SparkAction)
_sym_db.RegisterMessage(SparkAction.LoadFromInline)
_sym_db.RegisterMessage(SparkAction.ExecuteSQL)
_sym_db.RegisterMessage(SparkAction.ExtractPandas)
_sym_db.RegisterMessage(SparkAction.ExtractCell)

SparkGraph = _reflection.GeneratedProtocolMessageType('SparkGraph', (_message.Message,), dict(
  DESCRIPTOR = _SPARKGRAPH,
  __module__ = 'karps.proto.spark_pb2'
  # @@protoc_insertion_point(class_scope:karps.spark.SparkGraph)
  ))
_sym_db.RegisterMessage(SparkGraph)


# @@protoc_insertion_point(module_scope)
