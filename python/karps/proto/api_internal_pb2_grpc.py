# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from karps.proto import api_internal_pb2 as karps_dot_proto_dot_api__internal__pb2
from karps.proto import computation_pb2 as karps_dot_proto_dot_computation__pb2
from karps.proto import interface_pb2 as karps_dot_proto_dot_interface__pb2


class KarpsRestStub(object):
  """This service is not implemented in GRPC.
  It is implemented as a collection of RPC calls that accepts proto byte strings.
  This is useful for languages that do not have GRPC support.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateComputation = channel.unary_unary(
        '/karps.core.KarpsRest/CreateComputation',
        request_serializer=karps_dot_proto_dot_interface__pb2.CreateComputationRequest.SerializeToString,
        response_deserializer=karps_dot_proto_dot_interface__pb2.CreateComputationResponse.FromString,
        )
    self.ComputationStatus = channel.unary_unary(
        '/karps.core.KarpsRest/ComputationStatus',
        request_serializer=karps_dot_proto_dot_interface__pb2.ComputationStatusRequest.SerializeToString,
        response_deserializer=karps_dot_proto_dot_computation__pb2.BatchComputationResult.FromString,
        )
    self.ResourceStatus = channel.unary_unary(
        '/karps.core.KarpsRest/ResourceStatus',
        request_serializer=karps_dot_proto_dot_api__internal__pb2.AnalyzeResourcesRequest.SerializeToString,
        response_deserializer=karps_dot_proto_dot_api__internal__pb2.AnalyzeResourceResponse.FromString,
        )


class KarpsRestServicer(object):
  """This service is not implemented in GRPC.
  It is implemented as a collection of RPC calls that accepts proto byte strings.
  This is useful for languages that do not have GRPC support.
  """

  def CreateComputation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ComputationStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResourceStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_KarpsRestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateComputation': grpc.unary_unary_rpc_method_handler(
          servicer.CreateComputation,
          request_deserializer=karps_dot_proto_dot_interface__pb2.CreateComputationRequest.FromString,
          response_serializer=karps_dot_proto_dot_interface__pb2.CreateComputationResponse.SerializeToString,
      ),
      'ComputationStatus': grpc.unary_unary_rpc_method_handler(
          servicer.ComputationStatus,
          request_deserializer=karps_dot_proto_dot_interface__pb2.ComputationStatusRequest.FromString,
          response_serializer=karps_dot_proto_dot_computation__pb2.BatchComputationResult.SerializeToString,
      ),
      'ResourceStatus': grpc.unary_unary_rpc_method_handler(
          servicer.ResourceStatus,
          request_deserializer=karps_dot_proto_dot_api__internal__pb2.AnalyzeResourcesRequest.FromString,
          response_serializer=karps_dot_proto_dot_api__internal__pb2.AnalyzeResourceResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'karps.core.KarpsRest', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
