# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: karps/proto/types.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='karps/proto/types.proto',
  package='karps.core',
  syntax='proto3',
  serialized_pb=_b('\n\x17karps/proto/types.proto\x12\nkarps.core\"\xfd\x01\n\x07SQLType\x12\x33\n\nbasic_type\x18\x01 \x01(\x0e\x32\x1d.karps.core.SQLType.BasicTypeH\x00\x12)\n\narray_type\x18\x02 \x01(\x0b\x32\x13.karps.core.SQLTypeH\x00\x12-\n\x0bstruct_type\x18\x03 \x01(\x0b\x32\x16.karps.core.StructTypeH\x00\x12\x10\n\x08nullable\x18\x04 \x01(\x08\"B\n\tBasicType\x12\n\n\x06UNUSED\x10\x00\x12\x07\n\x03INT\x10\x01\x12\n\n\x06\x44OUBLE\x10\x02\x12\n\n\x06STRING\x10\x03\x12\x08\n\x04\x42OOL\x10\x04\x42\r\n\x0bstrict_type\"5\n\nStructType\x12\'\n\x06\x66ields\x18\x01 \x03(\x0b\x32\x17.karps.core.StructField\"J\n\x0bStructField\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\'\n\nfield_type\x18\x02 \x01(\x0b\x32\x13.karps.core.SQLTypeb\x06proto3')
)



_SQLTYPE_BASICTYPE = _descriptor.EnumDescriptor(
  name='BasicType',
  full_name='karps.core.SQLType.BasicType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNUSED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOUBLE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOL', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=212,
  serialized_end=278,
)
_sym_db.RegisterEnumDescriptor(_SQLTYPE_BASICTYPE)


_SQLTYPE = _descriptor.Descriptor(
  name='SQLType',
  full_name='karps.core.SQLType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='basic_type', full_name='karps.core.SQLType.basic_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='array_type', full_name='karps.core.SQLType.array_type', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='struct_type', full_name='karps.core.SQLType.struct_type', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nullable', full_name='karps.core.SQLType.nullable', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SQLTYPE_BASICTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='strict_type', full_name='karps.core.SQLType.strict_type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=40,
  serialized_end=293,
)


_STRUCTTYPE = _descriptor.Descriptor(
  name='StructType',
  full_name='karps.core.StructType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fields', full_name='karps.core.StructType.fields', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=295,
  serialized_end=348,
)


_STRUCTFIELD = _descriptor.Descriptor(
  name='StructField',
  full_name='karps.core.StructField',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field_name', full_name='karps.core.StructField.field_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='field_type', full_name='karps.core.StructField.field_type', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=350,
  serialized_end=424,
)

_SQLTYPE.fields_by_name['basic_type'].enum_type = _SQLTYPE_BASICTYPE
_SQLTYPE.fields_by_name['array_type'].message_type = _SQLTYPE
_SQLTYPE.fields_by_name['struct_type'].message_type = _STRUCTTYPE
_SQLTYPE_BASICTYPE.containing_type = _SQLTYPE
_SQLTYPE.oneofs_by_name['strict_type'].fields.append(
  _SQLTYPE.fields_by_name['basic_type'])
_SQLTYPE.fields_by_name['basic_type'].containing_oneof = _SQLTYPE.oneofs_by_name['strict_type']
_SQLTYPE.oneofs_by_name['strict_type'].fields.append(
  _SQLTYPE.fields_by_name['array_type'])
_SQLTYPE.fields_by_name['array_type'].containing_oneof = _SQLTYPE.oneofs_by_name['strict_type']
_SQLTYPE.oneofs_by_name['strict_type'].fields.append(
  _SQLTYPE.fields_by_name['struct_type'])
_SQLTYPE.fields_by_name['struct_type'].containing_oneof = _SQLTYPE.oneofs_by_name['strict_type']
_STRUCTTYPE.fields_by_name['fields'].message_type = _STRUCTFIELD
_STRUCTFIELD.fields_by_name['field_type'].message_type = _SQLTYPE
DESCRIPTOR.message_types_by_name['SQLType'] = _SQLTYPE
DESCRIPTOR.message_types_by_name['StructType'] = _STRUCTTYPE
DESCRIPTOR.message_types_by_name['StructField'] = _STRUCTFIELD
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SQLType = _reflection.GeneratedProtocolMessageType('SQLType', (_message.Message,), dict(
  DESCRIPTOR = _SQLTYPE,
  __module__ = 'karps.proto.types_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.SQLType)
  ))
_sym_db.RegisterMessage(SQLType)

StructType = _reflection.GeneratedProtocolMessageType('StructType', (_message.Message,), dict(
  DESCRIPTOR = _STRUCTTYPE,
  __module__ = 'karps.proto.types_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.StructType)
  ))
_sym_db.RegisterMessage(StructType)

StructField = _reflection.GeneratedProtocolMessageType('StructField', (_message.Message,), dict(
  DESCRIPTOR = _STRUCTFIELD,
  __module__ = 'karps.proto.types_pb2'
  # @@protoc_insertion_point(class_scope:karps.core.StructField)
  ))
_sym_db.RegisterMessage(StructField)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
